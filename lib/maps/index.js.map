{"version":3,"sources":["index.coffee"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"/src","sourcesContent":["# Imports\nredis = require 'redis'\nasync = require 'async'\n\n###\n# SuperSimpleSharedStats\n#\n# Simple stats aggregation backed by Redis\n###\nmodule.exports = class SuperSimpleSharedStats\n\t###\n\t# Constructor, Channel name should be the same for all clients contributing\n\t# or querying this stat\n\t###\n\tconstructor: ( @channelName, callback ) ->\n\t\t@ready = false\n\t\t@redis = redis.createClient( )\n\t\t@currentDate = new Date( )\n\t\t@currentMinute = @currentDate.getMinutes( )\n\t\t@keys =\n\t\t\t'data': \"stats:#{@channelName}:data\"\n\t\t\t'minute': \"stats:#{@channelName}:currentMinute\"\n\t\t\t'date': \"stats:#{@channelName}:currentDate\"\n\n\t\tasync.waterfall [\n\t\t\tcreateHour = ( next ) =>\n\t\t\t\targs = [@keys.data]\n\t\t\t\tfor i in [0..59]\n\t\t\t\t\targs.push i\n\t\t\t\t\targs.push 0\n\n\t\t\t\targs.push next\n\t\t\t\t@redis.hmset.apply @redis, args\n\n\t\t\tcreateMinutePosition = ( status, next ) =>\n\t\t\t\t@redis.set @keys.minute, @currentMinute, next\n\n\t\t\tcreateDatePosition = ( status, next ) =>\n\t\t\t\t@redis.set @keys.date, @currentDate, next\n\n\t\t], ( err, results ) =>\n\t\t\t@ready = true\n\t\t\tcallback?( )\n\n\t###\n\t# Removes the data regarding this stat from Redis\n\t###\n\tdestroy: ( callback ) ->\n\t\t@redis.del @keys.data, @keys.minute, @keys.date, callback\n\n\t###\n\t# Internal method for ensuring that the correct minute is being incremented\n\t# and maintains the relevant local variables.\n\t###\n\tcheckPosition: ( callback ) ->\n\t\tif not @ready\n\t\t\treturn setTimeout ( ( ) => @checkPosition callback ), 100\n\n\t\tnewDate = new Date( )\n\t\tnewMinute = newDate.getMinutes( )\n\n\t\tasync.waterfall [\n\t\t\tgetCurrentMinute = ( next ) =>\n\t\t\t\t@redis.get @keys.minute, ( err, minute ) =>\n\t\t\t\t\t@redis.get @keys.date, ( err, date ) ->\n\t\t\t\t\t\tnext null, minute, date\n\n\t\t\tupdateMinuteIfNeeded = ( minute, date, next ) =>\n\t\t\t\tdate = new Date( date )\n\n\t\t\t\tif ( newMinute isnt parseInt( minute ) ) and ( newDate > date )\n\t\t\t\t\t@currentMinute = newMinute\n\t\t\t\t\t@currentDate = newDate\n\n\t\t\t\t\treturn @redis.set @keys.minute, newMinute, ( ) =>\n\t\t\t\t\t\t@redis.set @keys.date, newDate, ( ) =>\n\t\t\t\t\t\t\t@redis.hset @keys.data, @currentMinute, 0, next\n\n\t\t\t\telse if date > @currentDate\n\t\t\t\t\t@currentMinute = minute\n\t\t\t\t\t@currentDate = newDate\n\n\t\t\t\tnext null, true\n\n\t\t], ( err, results ) ->\n\t\t\tcallback? null, true\n\n\t###\n\t# Increment the counter for the current minute\n\t###\n\tping: ( callback ) ->\n\t\tasync.waterfall [\n\t\t\t@checkPosition.bind @\n\n\t\t\tincrementCounter = ( success, next ) =>\n\t\t\t\t@redis.hincrby @keys.data, @currentMinute, 1, next\n\n\t\t], ( err, data ) ->\n\t\t\tcallback? null, data\n\n\t###\n\t# Responds with the count for the past minute\n\t###\n\tpastMinute: ( current = false, callback ) ->\n\t\tif typeof current is 'function'\n\t\t\tcallback = current\n\t\t\tcurrent = false\n\n\t\tminute = ( 59 + @currentMinute) % 60\n\t\tminute += 1\tif current\n\n\t\tasync.waterfall [\n\t\t\t@checkPosition.bind @\n\n\t\t\tgetLastMinute = ( success, next ) =>\n\t\t\t\t@redis.hget @keys.data, minute, next\n\n\t\t], ( err, data ) ->\n\t\t\tcallback? null, data\n\n\t###\n\t# Responds with the average over the past sample period (default 5 mins)\n\t###\n\tavgPerMinute: ( samplePeriod = 5, callback ) ->\n\t\tif typeof samplePeriod is 'function'\n\t\t\tcallback = samplePeriod\n\t\t\tsamplePeriod = 5\n\n\t\tif samplePeriod > 59\n\t\t\tsamplePeriod = 59\n\n\t\tasync.waterfall [\n\t\t\t@checkPosition.bind @\n\n\t\t\tgetMinutes = ( success, next ) =>\n\t\t\t\targs = [@keys.data]\n\t\t\t\tfor i in [0...samplePeriod]\n\t\t\t\t\targs.push ( 59 + @currentMinute - i ) % 60\n\n\t\t\t\targs.push next\n\t\t\t\t@redis.hmget.apply @redis, args\n\n\t\t], ( err, data ) ->\n\t\t\tret = ( data.reduce( ( ( a, b ) -> a + parseInt b ), 0 ) / samplePeriod )\n\t\t\tcallback? null, ret\n"]}